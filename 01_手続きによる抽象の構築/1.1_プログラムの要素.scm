; 基本式
; 組み合わせ法
; 抽象化法

; 1.1.1 式
; 基本的な式の一つは整数である
123

; 式の並びを括弧で囲んで手続きの作用を表現 = 組み合わせ(combinations)
(+ 12 25)
(* 12 25)
(/ 10 2)

; 演算子(operator), 非演算子(operands)

; 前置記法
(+ 1 23 543 54354)

;入れ子
(+ (* 3 5) (- 10 6))

(+ (* 3
	  (+ (* 2 4)
		 (+ 3 5)))
   (+ (- 10 7)
	  6))

; 1.1.2 名前と環境

(define size 2)
(define pi 3.1415)
(define radius 10)
(* pi (* radius radius))
(define circumference (* 2 pi radius)) 
circumference
; defineはcircumferenceのような合成演算の結果を刺すにも単純な名前を使うことが出来るので
; 最も単純な抽象手段である

; 値と記号を対応付けて後から取り出すために、解釈系は記憶を保持している
; その記憶を環境(environment)という


; 1.1.3 組み合わせの評価

; 1 組み合わせの部分式を評価する(部分式:組み合わせに与えられた1つの式)
; 2 最左部分式の値である手続きを残りの部分式である引数に作用させる
; 第1の規則で再帰的に部分式を評価する

; 基本的な式
; * 数字列の値
; * 基本演算子(帯域環境で機械命令に対応付けられた名前)
; * それ以外の名前の値(環境で名前と対応づけられたオブジェクト)

; 特殊形式
(define x 3)
; difineをxと3に評価するわけではない


; 1.1.4 合成手続き

(define (square x) (* x x))
; squareという合成手続きが出来る
(square 2)
(square (square 2))

(define (sum-of-squares x y)
  (+ (square x) (square y)))
(sum-of-squares 3 4)

; 基本的手続き 演算子,組み込み手続き
; 合成手続き 合成された手続き

; 1.1.5 手続き作用の置き換えモデル
 



